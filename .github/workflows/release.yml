name: Build & Release

on:
  push:
    tags:
      - 'v*'  # Runs when a new tag like "v1.0.0" is pushed

jobs:
  build:
    name: Build and Upload Executable
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        target: [win-x64, linux-x64, osx-x64]

        exclude:
          - os: ubuntu-latest
            target: win-x64
          - os: ubuntu-latest
            target: osx-x64
          - os: macos-latest
            target: win-x64
          - os: macos-latest
            target: linux-x64
          - os: windows-latest
            target: linux-x64
          - os: windows-latest
            target: osx-x64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x  # Change this based on your project

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --configuration Release --no-restore

      - name: Publish executable
        run: dotnet publish -c Release -r ${{ matrix.target }} --self-contained true -o ./build/${{ matrix.target }}

      - name: Zip build files
        run: |
          cd build/${{ matrix.target }}
          zip -r ../../chess-engine-${{ matrix.target }}.zip .

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: chess-engine-${{ matrix.target }}
          path: chess-engine-${{ matrix.target }}.zip

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Get tag version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Generate Changelog
        id: changelog
        run: |
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          git log $(git describe --tags --abbrev=0 @^)..@ --pretty=format:"- %s (%an)" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          body: |
            ðŸš€ **New release!**
            
            ðŸ”„ **Changelog:**
            ${{ env.CHANGELOG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
